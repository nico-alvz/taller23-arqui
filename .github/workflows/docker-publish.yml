name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: auth-service
            context: ./streamflow/services/auth
            image: streamflow-auth
          - name: users-service
            context: ./streamflow/services/users
            image: streamflow-users
          - name: billing-service
            context: ./streamflow/services/billing
            image: streamflow-billing
          - name: videos-service
            context: ./streamflow/services/videos
            image: streamflow-videos
          - name: monitoring-service
            context: ./streamflow/services/monitoring
            image: streamflow-monitoring
          - name: email-service
            context: ./streamflow/services/email
            image: streamflow-email
          - name: playlists-service
            context: ./streamflow/services/playlists
            image: streamflow-playlists
          - name: social-service
            context: ./streamflow/services/social
            image: streamflow-social
          - name: api-gateway
            context: ./streamflow/api-gateway
            image: streamflow-api-gateway
          - name: nginx
            context: ./streamflow/nginx
            image: streamflow-nginx

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ matrix.service.image }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update deployment files
      if: github.event_name != 'pull_request'
      run: |
        echo "Updated ${{ matrix.service.name }} image: ${{ steps.meta.outputs.tags }}"
        # Aquí podrías actualizar archivos de deployment o docker-compose si es necesario

  # Job para notificar el éxito de la construcción
  notify-success:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Notify success
      run: |
        echo "✅ All Docker images have been successfully built and pushed to Docker Hub!"
        echo "Images are tagged with:"
        echo "- Branch name: ${{ github.ref_name }}"
        echo "- Commit SHA: ${{ github.sha }}"
        echo "- Latest tag (for main branch)"

  # Job para notificar fallos
  notify-failure:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Notify failure
      run: |
        echo "❌ Docker image build and push failed!"
        echo "Please check the logs and fix any issues."
        exit 1

