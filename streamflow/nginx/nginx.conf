events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Log request body
    log_format with_body '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "BODY: $request_body"';
    
    access_log /var/log/nginx/access.log with_body;
    error_log /var/log/nginx/error.log;
    
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Upstream para API Gateway (load balancing)
    upstream api_gateway {
        server api-gateway-1:8080;
        server api-gateway-2:8080;
        server api-gateway-3:8080;
    }
    
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name localhost;
        
        # Comedy endpoint (HTTP only)
        location /comedia {
            return 200 '{"message": "¬øPor qu√© los desarrolladores no pueden mantener plantas? ¬°Porque siempre las matan con bugs! üå±üêõ", "service": "nginx-comedy", "protocol": "HTTP"}';
            add_header Content-Type application/json;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS server
    server {
        listen 443 ssl;
        server_name localhost;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Comedy endpoint (HTTPS)
        location /comedia {
            return 200 '{"message": "¬øCu√°l es la diferencia entre un programador y un mago? El mago hace desaparecer cosas, el programador las hace aparecer como bugs! ‚ú®üêõ", "service": "nginx-comedy", "protocol": "HTTPS"}';
            add_header Content-Type application/json;
        }
        
        # Proxy to API Gateway with load balancing
        location / {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enable request body logging
            proxy_set_header X-Original-URI $request_uri;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # Health check endpoint
        location /nginx-health {
            return 200 '{"status": "healthy", "service": "nginx-load-balancer", "upstreams": "3x api-gateway"}';
            add_header Content-Type application/json;
        }
    }
}
